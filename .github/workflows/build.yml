name: Build

on: [push, pull_request]

env:
  dotnet_sdk_version: '5.0.100-preview.7.20366.6'
  postgis_version: 3
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:

  publish:
    runs-on: windows-latest

    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Setup MSBuild
        uses: warrenbuckley/Setup-MSBuild@v1
        
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet_sdk_version }}

      - name: NuGet Cache
        uses: actions/cache@v1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Build.targets') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Pack NuGet packages (CI versions)
        if: startsWith(github.ref, 'refs/heads/')
        run: dotnet pack Npgsql.sln --configuration Release --output nupkgs --version-suffix "ci.$(date -u +%Y%m%dT%H%M%S)+sha.${GITHUB_SHA:0:9}" -p:ContinuousIntegrationBuild=true
        shell: bash

      - name: Pack NuGet packages (Release versions)
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet pack Npgsql.sln --configuration Release --output nupkgs -p:ContinuousIntegrationBuild=true
        shell: bash
        
      - name: Testing
        run: cp -R "$env:DOTNET_ROOT\sdk\*" "C:\Program Files\dotnet\sdk\"
        
      - name: Testing2
        run: ls "C:\Program Files\dotnet\sdk"
        
      - name: Testing3
        run: ls "C:\Program Files\dotnet\sdk\5.0.100-preview.7.20366.6"
        
      - name: $env:PATH
          
      - name: List SDKs
        run: dotnet --list-sdks

      - name: Restore for VSIX
        run: msbuild src\VSIX\VSIX.csproj -t:Restore -v:Minimal

      - name: Create VSIX
        run: msbuild src\VSIX\VSIX.csproj -p:Configuration=Release -v:Detailed

      - name: Create MSI
        run: msbuild src\MSI\MSI.wixproj -p:Configuration=Release -v:Minimal
